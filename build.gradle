buildscript {
    ext {
        kotlinVersion = '1.3.61'
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'de.andi95.smarthome'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.10")
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation("io.mockk:mockk:1.8.9")
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testCompile('io.projectreactor:reactor-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

node {
    version = '8.11.3'
    download = true
}

task bundle(type: YarnTask) {
    inputs.dir(new File('assets'))
    inputs.dir(new File('src'))
    outputs.dir(new File('dist'))
    args = ['run', 'bundle']
}

task start(type: YarnTask) {
    args = ['start']
}

//task testYarn(type: YarnTask) {
//    args = ['jest']
//}

//check.dependsOn(testYarn)
bundle.dependsOn(yarn_install)
assemble.dependsOn(bundle)